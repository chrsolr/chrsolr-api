// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using chrsolr_api.Data;

#nullable disable

namespace chrsolr_api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231017165953_seed-educations")]
    partial class seededucations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Education", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Educations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("108990f6-61b1-4d5f-ab5a-bef0786518d6"),
                            Description = "9 Week .NET Full Stack Program, 8/2014",
                            Location = "Coder Camps, Pearland, TX",
                            Order = 1,
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("287dc96b-a6d4-4f18-8ac1-8fc51e2f5b17"),
                            Description = "Bachelor's Degree in Computer Science, (78 Credits)",
                            Location = "Rhode Island College, Providence, RI",
                            Order = 2,
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("5373441f-9372-4bc8-92eb-7efdf7904e56"),
                            Description = "Associate Degree in Applied Science in Information Technology, 08/2011",
                            Location = "Monroe College, Bronx, NY",
                            Order = 3,
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        });
                });

            modelBuilder.Entity("Social", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Socials");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a98c838-b320-4fcf-bfcb-f7069b9238d2"),
                            IsActive = true,
                            Name = "Github",
                            Url = "https://github.com/chrsolr/",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("7f7da28d-3c90-4e9e-9ca4-11d584591286"),
                            IsActive = true,
                            Name = "LinkedIn",
                            Url = "https://www.linkedin.com/in/christiansoler/",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("c5090c39-bb6f-46dd-9300-00ef8fca9abc"),
                            IsActive = true,
                            Name = "Codepen",
                            Url = "https://codepen.io/chrsolr",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("65b8f649-b457-4e36-9152-ac3c609a8341"),
                            IsActive = true,
                            Name = "Instagram",
                            Url = "https://www.instagram.com/7w3n7y/",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("07e14d17-d03a-4912-8ee4-d557b4ce617c"),
                            IsActive = false,
                            Name = "Twitch",
                            Url = "https://www.twitch.tv/7w3n7y",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        },
                        new
                        {
                            Id = new Guid("09c2d661-5e93-4ab6-a218-5e358599ee4a"),
                            IsActive = false,
                            Name = "YouTube",
                            Url = "https://www.youtube.com/@chrsolr",
                            UserId = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8")
                        });
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ca4b089-8feb-4017-857a-b0129948a0c8"),
                            CreatedAt = new DateTime(2023, 10, 17, 16, 59, 53, 610, DateTimeKind.Utc).AddTicks(8070),
                            Email = "chr.solr@gmail.com",
                            FirstName = "Christian",
                            ImageUrl = "https://i.imgur.com/9X6lkc5.jpg",
                            LastName = "Soler",
                            NickName = "Chrsolr",
                            Password = "",
                            UpdatedAt = new DateTime(2023, 10, 17, 16, 59, 53, 610, DateTimeKind.Utc).AddTicks(8070),
                            Username = "chrsolr"
                        });
                });

            modelBuilder.Entity("Education", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Educations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Social", b =>
                {
                    b.HasOne("User", "User")
                        .WithMany("Socials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("User", b =>
                {
                    b.Navigation("Educations");

                    b.Navigation("Socials");
                });
#pragma warning restore 612, 618
        }
    }
}
